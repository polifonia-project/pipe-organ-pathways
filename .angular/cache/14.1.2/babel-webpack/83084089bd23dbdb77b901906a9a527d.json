{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./repository.model\";\nimport * as i2 from \"@angular/router\";\nexport let OverviewComponent = /*#__PURE__*/(() => {\n  class OverviewComponent {\n    constructor(model, activatedRoute) {\n      this.model = model;\n      this.activatedRoute = activatedRoute;\n      this.artworkResults = [];\n      this.themeResults = [];\n      this.scriptResults = [];\n      this.firstScripts = [];\n      this.images = [944, 1011, 984].map(n => `https://picsum.photos/id/${n}/900/500`);\n    }\n\n    ngOnInit() {\n      this.scripts = this.activatedRoute.snapshot.data.model1;\n      this.artworks = this.activatedRoute.snapshot.data.model2;\n      this.themes = this.activatedRoute.snapshot.data.model3;\n\n      for (var script of this.scripts) {\n        if (script.visible) {\n          //add to the artwork result array\n          for (var artworkid of script.artworkids) {\n            let artind = this.artworks.findIndex(x => x._id == artworkid);\n\n            if (artind > -1) {\n              let artresind = this.artworkResults.findIndex(x => x.artworkurl == this.artworks[artind].url);\n\n              if (artresind > -1) {\n                this.artworkResults[artresind].scripts.push(script);\n              } else {\n                this.artworkResults.push({\n                  artworkurl: this.artworks[artind].url,\n                  name: this.artworks[artind].name,\n                  artist: this.artworks[artind].artist,\n                  year: this.artworks[artind].year,\n                  searchstring: this.artworks[artind].name + \", \" + this.artworks[artind].artist + \", \" + this.artworks[artind].year,\n                  scripts: [script]\n                });\n              }\n            }\n          } //add to the theme result array\n\n\n          for (var themeid of script.themeids) {\n            let themeresind = this.themeResults.findIndex(x => x.themeid == themeid);\n\n            if (themeresind > -1) {\n              this.themeResults[themeresind].scripts.push(script);\n            } else {\n              let themeind = this.themes.findIndex(x => x._id == themeid);\n\n              if (themeind > -1) {\n                this.themeResults.push({\n                  themeid: themeid,\n                  name: this.themes[themeind].name,\n                  description: this.themes[themeind].description,\n                  searchstring: this.themes[themeind].name + \": \" + this.themes[themeind].description,\n                  scripts: [script]\n                });\n              }\n            }\n          } //add to the script result array\n\n\n          this.scriptResults.push({\n            searchstring: script.name + \": \" + script.description + \" - \" + script.author,\n            script: script\n          });\n        }\n      } //get random scripts for feature\n\n\n      let shuffled = this.scriptResults.map(value => ({\n        value,\n        sort: Math.random()\n      })).sort((a, b) => a.sort - b.sort).map(({\n        value\n      }) => value);\n\n      for (var scr of shuffled.slice(0, 5)) {\n        this.firstScripts.push(scr.script);\n      }\n\n      console.log(this.artworkResults);\n      console.log(this.themeResults);\n      console.log(this.scriptResults);\n    }\n\n    foo() {\n      console.log(this.artworkResults);\n      console.log(this.themeResults);\n      console.log(this.scriptResults);\n      console.log(this.firstScripts);\n    }\n\n    getArtworkFromId(_id) {\n      let ind = this.artworks.findIndex(x => x._id == _id);\n\n      if (ind > -1) {\n        return [this.artworks[ind]];\n      } else {\n        return [];\n      }\n    }\n\n    getThemesFromIds(_ids) {\n      let themes = [];\n\n      for (var _id of _ids) {\n        let ind = this.themes.findIndex(x => x._id == _id);\n\n        if (ind > -1) {\n          themes.push(this.themes[ind]);\n        }\n      }\n\n      return themes;\n    }\n\n    getScriptOverviewData() {\n      console.log(\"hello\");\n      const scripts = this.model.getScripts();\n      const artworks = this.model.getArtworks();\n      const themes = this.model.getThemes();\n\n      for (var script of scripts) {\n        if (script.visible) {\n          //add to the artwork result array\n          for (var artworkid of script.artworkids) {\n            let artind = artworks.findIndex(x => x._id == artworkid);\n\n            if (artind > -1) {\n              let artresind = this.artworkResults.findIndex(x => x.artworkurl == artworks[artind].url);\n\n              if (artresind > -1) {\n                this.artworkResults[artresind].scripts.push(script);\n              } else {\n                this.artworkResults.push({\n                  artworkurl: artworks[artind].url,\n                  name: artworks[artind].name,\n                  artist: artworks[artind].artist,\n                  year: artworks[artind].year,\n                  searchstring: artworks[artind].name + \", \" + artworks[artind].artist + \", \" + artworks[artind].year,\n                  scripts: [script]\n                });\n              }\n            }\n          } //add to the theme result array\n\n\n          for (var themeid of script.themeids) {\n            let themeresind = this.themeResults.findIndex(x => x.themeid == themeid);\n\n            if (themeresind > -1) {\n              this.themeResults[themeresind].scripts.push(script);\n            } else {\n              let themeind = themes.findIndex(x => x._id == themeid);\n\n              if (themeind > -1) {\n                this.themeResults.push({\n                  themeid: themeid,\n                  name: themes[themeind].name,\n                  description: themes[themeind].description,\n                  searchstring: themes[themeind].name + \": \" + themes[themeind].description,\n                  scripts: [script]\n                });\n              }\n            }\n          } //add to the script result array\n\n\n          this.scriptResults.push({\n            searchstring: script.name + \": \" + script.description + \" - \" + script.author,\n            script: script\n          });\n        }\n      }\n\n      console.log(this.artworkResults);\n      console.log(this.themeResults);\n      console.log(this.scriptResults);\n    }\n\n  }\n\n  OverviewComponent.ɵfac = function OverviewComponent_Factory(t) {\n    return new (t || OverviewComponent)(i0.ɵɵdirectiveInject(i1.Model), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  OverviewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OverviewComponent,\n    selectors: [[\"paOverview\"]],\n    decls: 20,\n    vars: 0,\n    consts: [[\"id\", \"carouselExampleIndicators\", \"data-ride\", \"carousel\", 1, \"carousel\", \"slide\"], [1, \"carousel-indicators\"], [\"data-target\", \"#carouselExampleIndicators\", \"data-slide-to\", \"0\", 1, \"active\"], [\"data-target\", \"#carouselExampleIndicators\", \"data-slide-to\", \"1\"], [\"data-target\", \"#carouselExampleIndicators\", \"data-slide-to\", \"2\"], [1, \"carousel-inner\"], [1, \"carousel-item\", \"active\"], [\"src\", \"...\", \"alt\", \"First slide\", 1, \"d-block\", \"w-100\"], [1, \"carousel-item\"], [\"src\", \"...\", \"alt\", \"Second slide\", 1, \"d-block\", \"w-100\"], [\"src\", \"...\", \"alt\", \"Third slide\", 1, \"d-block\", \"w-100\"], [\"href\", \"#carouselExampleIndicators\", \"role\", \"button\", \"data-slide\", \"prev\", 1, \"carousel-control-prev\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], [1, \"sr-only\"], [\"href\", \"#carouselExampleIndicators\", \"role\", \"button\", \"data-slide\", \"next\", 1, \"carousel-control-next\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"]],\n    template: function OverviewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ol\", 1);\n        i0.ɵɵelement(2, \"li\", 2)(3, \"li\", 3)(4, \"li\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6);\n        i0.ɵɵelement(7, \"img\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵelement(9, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelement(11, \"img\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"a\", 11);\n        i0.ɵɵelement(13, \"span\", 12);\n        i0.ɵɵelementStart(14, \"span\", 13);\n        i0.ɵɵtext(15, \"Previous\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"a\", 14);\n        i0.ɵɵelement(17, \"span\", 15);\n        i0.ɵɵelementStart(18, \"span\", 13);\n        i0.ɵɵtext(19, \"Next\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    encapsulation: 2\n  });\n  return OverviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}