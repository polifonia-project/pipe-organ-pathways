{"ast":null,"code":"import { NavigationEnd, NavigationCancel } from \"@angular/router\";\nimport { filter } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction MessageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"bg-danger\", ctx_r0.lastMessage.error);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.lastMessage.text);\n  }\n}\n\nexport let MessageComponent = /*#__PURE__*/(() => {\n  class MessageComponent {\n    constructor(messageService, router) {\n      messageService.messages.subscribe(m => this.lastMessage = m);\n      router.events.pipe(filter(e => e instanceof NavigationEnd || e instanceof NavigationCancel)).subscribe(e => {\n        this.lastMessage = null;\n      });\n    }\n\n  }\n\n  MessageComponent.ɵfac = function MessageComponent_Factory(t) {\n    return new (t || MessageComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  MessageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessageComponent,\n    selectors: [[\"paMessages\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"bg-info text-white p-2 text-center\", 3, \"bg-danger\", 4, \"ngIf\"], [1, \"bg-info\", \"text-white\", \"p-2\", \"text-center\"]],\n    template: function MessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MessageComponent_div_0_Template, 3, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.lastMessage);\n      }\n    },\n    dependencies: [i3.NgIf],\n    encapsulation: 2\n  });\n  return MessageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}