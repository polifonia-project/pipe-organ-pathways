{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet OverviewComponent = class OverviewComponent {\n  constructor(model, activatedRoute) {\n    this.model = model;\n    this.activatedRoute = activatedRoute;\n    this.artworks = [];\n    this.selectedArtwork = undefined;\n    this.artworkResults = [];\n    this.themeResults = [];\n    this.scriptResults = [];\n    this.firstScripts = [];\n    this.placeholderText = \"Artwork, artist or year\";\n    this.keyword = 'searchstring';\n    this.data = this.artworks;\n    this.images = [944, 1011, 984].map(n => `https://picsum.photos/id/${n}/900/500`);\n  }\n\n  selectEvent(item) {\n    // do something with selected item\n    console.log(item);\n    this.selectedArtwork = item;\n  }\n\n  onChangeSearch(val) {// fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e) {// do something when input is focused\n  }\n\n  ngOnInit() {\n    this.scripts = this.activatedRoute.snapshot.data.model1;\n    this.artworks = this.activatedRoute.snapshot.data.model2;\n    this.themes = this.activatedRoute.snapshot.data.model3;\n\n    for (var script of this.scripts) {\n      if (script.visible || script.open) {\n        //add to the artwork result array\n        for (var artworkid of script.artworkids) {\n          let artind = this.artworks.findIndex(x => x._id == artworkid);\n\n          if (artind > -1) {\n            let artresind = this.artworkResults.findIndex(x => x.artworkurl == this.artworks[artind].url);\n\n            if (artresind > -1) {\n              this.artworkResults[artresind].scripts.push(script);\n            } else {\n              this.artworkResults.push({\n                artworkurl: this.artworks[artind].url,\n                name: this.artworks[artind].name,\n                artist: this.artworks[artind].artist,\n                year: this.artworks[artind].year,\n                searchstring: this.artworks[artind].name + \", \" + this.artworks[artind].artist + \", \" + this.artworks[artind].year,\n                scripts: [script]\n              });\n            }\n          }\n        } //add to the theme result array\n\n\n        for (var themeid of script.themeids) {\n          let themeresind = this.themeResults.findIndex(x => x.themeid == themeid);\n\n          if (themeresind > -1) {\n            this.themeResults[themeresind].scripts.push(script);\n          } else {\n            let themeind = this.themes.findIndex(x => x._id == themeid);\n\n            if (themeind > -1) {\n              this.themeResults.push({\n                themeid: themeid,\n                name: this.themes[themeind].name,\n                description: this.themes[themeind].description,\n                searchstring: this.themes[themeind].name + \": \" + this.themes[themeind].description,\n                scripts: [script]\n              });\n            }\n          }\n        } //add to the script result array\n\n\n        this.scriptResults.push({\n          searchstring: script.name + \": \" + script.description + \" - \" + script.author,\n          script: script\n        });\n      }\n    } //get random scripts for feature\n\n\n    let shuffled = this.scriptResults.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(({\n      value\n    }) => value);\n\n    for (var scr of shuffled.slice(0, 5)) {\n      this.firstScripts.push(scr.script);\n    }\n\n    console.log(this.artworkResults);\n    console.log(this.themeResults);\n    console.log(this.scriptResults);\n  }\n\n  foo() {\n    console.log(this.data);\n    console.log(this.artworks);\n    console.log(this.artworkResults);\n    console.log(this.themeResults);\n    console.log(this.scriptResults);\n    console.log(this.firstScripts);\n  }\n\n  getArtworkFromId(_id) {\n    let ind = this.artworks.findIndex(x => x._id == _id);\n\n    if (ind > -1) {\n      return [this.artworks[ind]];\n    } else {\n      return [];\n    }\n  }\n\n  getThemesFromIds(_ids) {\n    let themes = [];\n\n    for (var _id of _ids) {\n      let ind = this.themes.findIndex(x => x._id == _id);\n\n      if (ind > -1) {\n        themes.push(this.themes[ind]);\n      }\n    }\n\n    return themes;\n  }\n\n  getScriptOverviewData() {\n    console.log(\"hello\");\n    const scripts = this.model.getScripts();\n    const artworks = this.model.getArtworks();\n    const themes = this.model.getThemes();\n\n    for (var script of scripts) {\n      if (script.visible) {\n        //add to the artwork result array\n        for (var artworkid of script.artworkids) {\n          let artind = artworks.findIndex(x => x._id == artworkid);\n\n          if (artind > -1) {\n            let artresind = this.artworkResults.findIndex(x => x.artworkurl == artworks[artind].url);\n\n            if (artresind > -1) {\n              this.artworkResults[artresind].scripts.push(script);\n            } else {\n              this.artworkResults.push({\n                artworkurl: artworks[artind].url,\n                name: artworks[artind].name,\n                artist: artworks[artind].artist,\n                year: artworks[artind].year,\n                searchstring: artworks[artind].name + \", \" + artworks[artind].artist + \", \" + artworks[artind].year,\n                scripts: [script]\n              });\n            }\n          }\n        } //add to the theme result array\n\n\n        for (var themeid of script.themeids) {\n          let themeresind = this.themeResults.findIndex(x => x.themeid == themeid);\n\n          if (themeresind > -1) {\n            this.themeResults[themeresind].scripts.push(script);\n          } else {\n            let themeind = themes.findIndex(x => x._id == themeid);\n\n            if (themeind > -1) {\n              this.themeResults.push({\n                themeid: themeid,\n                name: themes[themeind].name,\n                description: themes[themeind].description,\n                searchstring: themes[themeind].name + \": \" + themes[themeind].description,\n                scripts: [script]\n              });\n            }\n          }\n        } //add to the script result array\n\n\n        this.scriptResults.push({\n          searchstring: script.name + \": \" + script.description + \" - \" + script.author,\n          script: script\n        });\n      }\n    }\n\n    console.log(this.artworkResults);\n    console.log(this.themeResults);\n    console.log(this.scriptResults);\n  }\n\n};\nOverviewComponent = __decorate([Component({\n  selector: \"paOverview\",\n  templateUrl: \"overview.component.html\"\n})], OverviewComponent);\nexport { OverviewComponent };","map":null,"metadata":{},"sourceType":"module"}